/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CAPACITYREADOUTCONTAINERBASE_HPP
#define CAPACITYREADOUTCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>

class CapacityReadoutContainerBase : public touchgfx::Container
{
public:
    CapacityReadoutContainerBase();
    virtual ~CapacityReadoutContainerBase() {}
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setRequestTimerResetCallback(touchgfx::GenericCallback<>& callback)
    {
        this->requestTimerResetCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitRequestTimerResetCallback()
    {
        if (requestTimerResetCallback && requestTimerResetCallback->isValid())
        {
            this->requestTimerResetCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::BoxWithBorder background;
    touchgfx::TextArea labelTextArea;
    touchgfx::TextArea currentUnitTextArea;
    touchgfx::TextAreaWithOneWildcard currentValueTextArea;
    touchgfx::TextArea capacityLabelTextArea;
    touchgfx::TextArea elapsedTimeLabelTextArea;
    touchgfx::DigitalClock digitalClock;
    touchgfx::ButtonWithLabel resetButton;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CapacityReadoutContainerBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* requestTimerResetCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // CAPACITYREADOUTCONTAINERBASE_HPP
