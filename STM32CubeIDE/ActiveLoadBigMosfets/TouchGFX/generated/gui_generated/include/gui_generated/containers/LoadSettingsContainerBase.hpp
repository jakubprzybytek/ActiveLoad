/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LOADSETTINGSCONTAINERBASE_HPP
#define LOADSETTINGSCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/BoxWithBorder.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/mixins/ClickListener.hpp>

class LoadSettingsContainerBase : public touchgfx::Container
{
public:
    LoadSettingsContainerBase();
    virtual ~LoadSettingsContainerBase() {}
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setSelectCurrentLimitForEditCallback(touchgfx::GenericCallback<>& callback)
    {
        this->selectCurrentLimitForEditCallback = &callback;
    }
    void setSelectVoltageLimitForEditCallback(touchgfx::GenericCallback<>& callback)
    {
        this->selectVoltageLimitForEditCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitSelectCurrentLimitForEditCallback()
    {
        if (selectCurrentLimitForEditCallback && selectCurrentLimitForEditCallback->isValid())
        {
            this->selectCurrentLimitForEditCallback->execute();
        }
    }
    virtual void emitSelectVoltageLimitForEditCallback()
    {
        if (selectVoltageLimitForEditCallback && selectVoltageLimitForEditCallback->isValid())
        {
            this->selectVoltageLimitForEditCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::BoxWithBorder background;
    touchgfx::TextArea currentUnitTextArea;
    touchgfx::ClickListener< touchgfx::BoxWithBorder > currentValueBox;
    touchgfx::TextAreaWithOneWildcard currentValueTextArea;
    touchgfx::ButtonWithLabel startStopButton;
    touchgfx::ToggleButton voltageLimitEnabledButton;
    touchgfx::TextArea voltageLimitEnableLabelTextArea;
    touchgfx::ClickListener< touchgfx::BoxWithBorder > voltageValueBox;
    touchgfx::TextArea voltageUnitTextArea;
    touchgfx::TextAreaWithOneWildcard voltageValueTextArea;
    touchgfx::TextArea voltageLabelTextArea;
    touchgfx::TextArea labelTextArea;
    touchgfx::TextAreaWithOneWildcard dacValueTextArea;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<LoadSettingsContainerBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* selectCurrentLimitForEditCallback;
    touchgfx::GenericCallback<>* selectVoltageLimitForEditCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // LOADSETTINGSCONTAINERBASE_HPP
