/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include "BitmapDatabase.hpp"

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    capacityReadoutContainerRequestTimerResetCallback(this, &MainViewBase::capacityReadoutContainerRequestTimerResetCallbackHandler),
    loadSettingsContainerSelectVoltageLimitForEditCallback(this, &MainViewBase::loadSettingsContainerSelectVoltageLimitForEditCallbackHandler),
    loadSettingsContainerSelectCurrentLimitForEditCallback(this, &MainViewBase::loadSettingsContainerSelectCurrentLimitForEditCallbackHandler)
{

    background.setPosition(0, 0, 240, 320);
    background.setColor(touchgfx::Color::getColorFrom24BitRGB(46, 46, 46));
    background.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(100, 100, 100));
    background.setBorderSize(2);

    termpControlContainer.setXY(160, 188);

    inputReadoutContainer.setXY(4, 4);

    capacityReadoutContainer.setXY(4, 188);
    capacityReadoutContainer.setRequestTimerResetCallback(capacityReadoutContainerRequestTimerResetCallback);

    titleTextArea.setPosition(0, 3, 236, 25);
    titleTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(158, 199, 255));
    titleTextArea.setLinespacing(0);
    titleTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID47));

    loadSettingsContainer.setXY(4, 92);
    loadSettingsContainer.setSelectVoltageLimitForEditCallback(loadSettingsContainerSelectVoltageLimitForEditCallback);
    loadSettingsContainer.setSelectCurrentLimitForEditCallback(loadSettingsContainerSelectCurrentLimitForEditCallback);

    resetConfirmationModalWindow.setBackground(touchgfx::BitmapId(BITMAP_MY_MODAL_BACKGROUND_ID), 18, 88);
    resetConfirmationModalWindow.setShadeColor(touchgfx::Color::getColorFrom24BitRGB(97, 97, 97));
    resetConfirmationModalWindow.setShadeAlpha(0);
    resetConfirmationModalWindow.hide();

    resetButton.setXY(113, 70);
    resetButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    resetButton.setLabelText(touchgfx::TypedText(T_SINGLEUSEID64));
    resetButton.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    resetButton.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    resetConfirmationModalWindow.add(resetButton);

    warningImage.setXY(10, 15);
    warningImage.setBitmap(touchgfx::Bitmap(BITMAP_DARK_ICONS_ALERT_32_ID));
    resetConfirmationModalWindow.add(warningImage);

    cancelButton.setXY(28, 70);
    cancelButton.setBitmaps(touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), touchgfx::Bitmap(BITMAP_BLUE_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID));
    cancelButton.setLabelText(touchgfx::TypedText(T_SINGLEUSEID65));
    cancelButton.setLabelColor(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    cancelButton.setLabelColorPressed(touchgfx::Color::getColorFrom24BitRGB(255, 255, 255));
    cancelButton.setAction(buttonCallback);
    resetConfirmationModalWindow.add(cancelButton);

    resetTextArea.setXY(64, 23);
    resetTextArea.setColor(touchgfx::Color::getColorFrom24BitRGB(83, 83, 83));
    resetTextArea.setLinespacing(0);
    resetTextArea.setTypedText(touchgfx::TypedText(T_SINGLEUSEID66));
    resetConfirmationModalWindow.add(resetTextArea);

    add(background);
    add(termpControlContainer);
    add(inputReadoutContainer);
    add(capacityReadoutContainer);
    add(titleTextArea);
    add(loadSettingsContainer);
    add(resetConfirmationModalWindow);
}

void MainViewBase::setupScreen()
{
    termpControlContainer.initialize();
    inputReadoutContainer.initialize();
    capacityReadoutContainer.initialize();
    loadSettingsContainer.initialize();
}

void MainViewBase::capacityReadoutContainerRequestTimerResetCallbackHandler()
{
    //ShowResetConfirmationModalWindowInteraction
    //When capacityReadoutContainer requestTimerReset show resetConfirmationModalWindow
    //Show resetConfirmationModalWindow
    resetConfirmationModalWindow.setVisible(true);
    resetConfirmationModalWindow.invalidate();
}

void MainViewBase::loadSettingsContainerSelectVoltageLimitForEditCallbackHandler()
{
    //selectingVoltageLimitForEdit
    //When loadSettingsContainer selectVoltageLimitForEdit execute C++ code
    //Execute C++ code
    this->presenter->selectVoltageLimitForEdit();
}

void MainViewBase::loadSettingsContainerSelectCurrentLimitForEditCallbackHandler()
{
    //selectingCurrentLimitForEdit
    //When loadSettingsContainer selectCurrentLimitForEdit execute C++ code
    //Execute C++ code
    this->presenter->selectCurrentLimitForEdit();
}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &cancelButton)
    {
        //HideResetConfirmationModelWindowInteraction
        //When cancelButton clicked hide resetConfirmationModalWindow
        //Hide resetConfirmationModalWindow
        resetConfirmationModalWindow.setVisible(false);
        resetConfirmationModalWindow.invalidate();
    }
}
